{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/ms-task/src/app/app.controller.ts","webpack:///./apps/ms-task/src/app/app.module.ts","webpack:///./apps/ms-task/src/app/app.service.ts","webpack:///./apps/ms-task/src/app/components/components.module.ts","webpack:///./apps/ms-task/src/app/components/project-tasks/dto/input/create-project-task.input.ts","webpack:///./apps/ms-task/src/app/components/project-tasks/project-tasks.module.ts","webpack:///./apps/ms-task/src/app/components/project-tasks/repository/project-tasks-repository.service.ts","webpack:///./apps/ms-task/src/app/components/project-tasks/resolver/project-tasks.resolver.ts","webpack:///./apps/ms-task/src/app/components/project-tasks/service/project-tasks.service.ts","webpack:///./apps/ms-task/src/app/entities/project-tasks.entity.ts","webpack:///./apps/ms-task/src/app/models/project-tasks.model.ts","webpack:///./apps/ms-task/src/app/repositories/base/base-abstract-repository.ts","webpack:///./apps/ms-task/src/app/task/task.controller.ts","webpack:///./apps/ms-task/src/app/task/task.module.ts","webpack:///./apps/ms-task/src/app/task/task.service.ts","webpack:///./apps/ms-task/src/config.orm.ts","webpack:///./apps/ms-task/src/config/typeorm/type-orm.service.ts","webpack:///./apps/ms-task/src/main.ts","webpack:///./libs/ms-core/src/index.ts","webpack:///./libs/ms-core/src/lib/common/constants/constants.ts","webpack:///./libs/ms-core/src/lib/config/configuration.ts","webpack:///./libs/ms-core/src/lib/config/validation.ts","webpack:///./libs/ms-core/src/lib/ms-core.module.ts","webpack:///./libs/ms-core/src/lib/resolvers/core.resolver.ts","webpack:///./libs/ms-core/src/services/key-vault/key-vault.service.ts","webpack:///./libs/ms-core/src/services/secret/secret.service.ts","webpack:///external \"@azure/identity\"","webpack:///external \"@azure/keyvault-secrets\"","webpack:///external \"@hapi/joi\"","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/graphql\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"class-validator\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"uuid\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getData() {\r\n    return this.appService.getData();\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport {\r\n  TypeOrmService,\r\n} from '../config/typeorm/type-orm.service';\r\nimport { TaskModule } from './task/task.module';\r\nimport { GraphQLModule } from '@nestjs/graphql';\r\nimport { ComponentsModule } from './components/components.module';\n\r\n@Module({\r\n  imports: [\r\n    TaskModule,\r\n    TypeOrmModule.forRootAsync({\r\n      useClass: TypeOrmService,\r\n    }),\r\n    GraphQLModule.forRoot({\r\n      context: ({ req, connection }) => connection ? { req: connection.context } : { req },\r\n      autoSchemaFile: true,\r\n    }),\r\n    ComponentsModule,\r\n  ],\r\n  controllers: [AppController],\r\n  providers: [AppService],\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n  getData(): { message: string } {\r\n    return { message: 'Welcome to ms-task!' };\r\n  }\r\n}\r\n","import { Module } from '@nestjs/common';\nimport { ProjectTasksModule } from './project-tasks/project-tasks.module';\n@Module({\n  imports: [ProjectTasksModule],\n  providers: []\n})\nexport class ComponentsModule { }\n","import { Field, InputType } from \"@nestjs/graphql\";\nimport { IsNotEmpty, IsOptional, Length } from 'class-validator';\n@InputType()\nexport class CreateProjectTaskInput {\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    ParentTaskID?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    ChildTaskID?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    TaskTitle?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    StartDate?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    EndDate?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    EstimatedDays?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    SendNotification?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    SaveTaskAsTemplate?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    BKPID?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    PhasesID?: string;\n\n    @Field({ description: `Client Name` })\n    CreatedOn?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    CreatedBy?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    UpdatedOn?: number;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    UpdatedBy?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    IsDeleted?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    ReferenceID?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    ReferenceTypeID?: string;\n\n    @Field({ description: `Client Name` })\n    @IsOptional()\n    Status?: string;\n}\n","import { Module } from '@nestjs/common';\nimport { ProjectTasksService } from './service/project-tasks.service';\nimport { ProjectTasksResolver } from './resolver/project-tasks.resolver';\nimport { ProjectTasksRepositoryService } from './repository/project-tasks-repository.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProjectTasksEntity } from '../../entities/project-tasks.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProjectTasksEntity])],\n  providers: [ProjectTasksResolver,\n    {\n      provide: 'IProjectTasksRepository',\n      useClass: ProjectTasksRepositoryService,\n    },\n    {\n      provide: 'IProjectTasksService',\n      useClass: ProjectTasksService,\n    }]\n})\nexport class ProjectTasksModule { }\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ProjectTasksEntity } from '../../../entities/project-tasks.entity';\nimport { BaseAbstractRepository } from '../../../repositories/base/base-abstract-repository';\nimport { IProjectTasksRepository } from '../interface/project-tasks-repository.interface';\n\n@Injectable()\nexport class ProjectTasksRepositoryService extends BaseAbstractRepository<ProjectTasksEntity>\n    implements IProjectTasksRepository {\n    constructor(\n        @InjectRepository(ProjectTasksEntity)\n        private readonly projectRepository: Repository<ProjectTasksEntity>\n    ) {\n        super(projectRepository);\n    }\n}\n","import { Inject } from '@nestjs/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { ProjectTasksEntity } from '../../../entities/project-tasks.entity';\nimport { ProjectTasksModel } from '../../../models/project-tasks.model';\nimport { CreateProjectTaskInput } from '../dto/input/create-project-task.input';\nimport { ProjectTasksService } from '../service/project-tasks.service';\n\n@Resolver(() => ProjectTasksModel)\nexport class ProjectTasksResolver {\n    constructor(\n        @Inject('IProjectTasksService')\n        private readonly projectTasksService: ProjectTasksService) { }\n\n\n    @Query(() => [ProjectTasksEntity], { nullable: true })\n    async getProjectTasks(): Promise<ProjectTasksEntity[]> {\n        return await this.projectTasksService.findAll()\n    }\n\n\n    @Mutation(() => ProjectTasksModel)\n    async createProjectTask(\n        @Args('newTask') createProjectTaskInput: CreateProjectTaskInput\n    ) {\n        return this.projectTasksService.create(createProjectTaskInput);\n    }\n\n}\n\n","import { Inject, Injectable } from '@nestjs/common';\nimport { ProjectTasksEntity } from '../../../entities/project-tasks.entity';\nimport { CreateProjectTaskInput } from '../dto/input/create-project-task.input';\nimport { IProjectTasksRepository } from '../interface/project-tasks-repository.interface';\nimport { IProjectTasksService } from '../interface/project-tasks-service.interface';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable()\nexport class ProjectTasksService implements IProjectTasksService {\n    constructor(\n        @Inject('IProjectTasksRepository')\n        private readonly projectTasksRepository: IProjectTasksRepository\n    ) { }\n\n    public async create(createProjectTaskInput: CreateProjectTaskInput): Promise<ProjectTasksEntity> {\n        const projectTasksEntity: ProjectTasksEntity = {\n            TaskID: uuidv4(),\n            ...createProjectTaskInput\n        }\n        return await this.projectTasksRepository.create(projectTasksEntity);\n    }\n\n\n    public async findAll(): Promise<ProjectTasksEntity[]> {\n\n        return await this.projectTasksRepository.findAll();\n    }\n\n}\n","import { BaseEntity, BeforeInsert, Column, Entity, ObjectIdColumn, PrimaryColumn, PrimaryGeneratedColumn } from 'typeorm';\r\nimport { Field, Int, ObjectType } from \"@nestjs/graphql\";\r\n\r\n\r\n@ObjectType()\r\n@Entity({ name: 'ProjectTasks' })\r\nexport class ProjectTasksEntity {\r\n  @Field()\r\n  @Column({ unique: true })\r\n  @PrimaryColumn()\r\n  TaskID: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  ParentTaskID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  ChildTaskID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  TaskTitle?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  StartDate?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  EndDate?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  EstimatedDays?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  SendNotification?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  SaveTaskAsTemplate?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  BKPID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  PhasesID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  CreatedOn?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  CreatedBy?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  UpdatedOn?: number;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  UpdatedBy?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  IsDeleted?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  ReferenceID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  ReferenceTypeID?: string;\r\n\r\n  @Field()\r\n  @Column({ nullable: true })\r\n  Status?: string;\r\n}\r\n","import { Field, Int, ObjectType } from '@nestjs/graphql';\r\n\r\n@ObjectType()\r\nexport class ProjectTasksModel {\r\n  @Field()\r\n  TaskID: string;\r\n\r\n  @Field()\r\n  ParentTaskID?: string;\r\n\r\n  @Field()\r\n  ChildTaskID?: string;\r\n\r\n  @Field()\r\n  TaskTitle?: string;\r\n\r\n  @Field()\r\n  StartDate?: string;\r\n\r\n  @Field()\r\n  EndDate?: string;\r\n\r\n  @Field()\r\n  EstimatedDays?: string;\r\n\r\n  @Field()\r\n  SendNotification?: string;\r\n\r\n  @Field()\r\n  SaveTaskAsTemplate?: string;\r\n\r\n  @Field()\r\n  BKPID?: string;\r\n\r\n  @Field()\r\n  PhasesID?: string;\r\n\r\n  @Field()\r\n  CreatedOn?: string;\r\n\r\n  @Field()\r\n  CreatedBy?: string;\r\n\r\n  @Field()\r\n  UpdatedOn?: number;\r\n\r\n  @Field()\r\n  UpdatedBy?: string;\r\n\r\n  @Field()\r\n  IsDeleted?: string;\r\n\r\n  @Field()\r\n  ReferenceID?: string;\r\n\r\n  @Field()\r\n  ReferenceTypeID?: string;\r\n\r\n  @Field()\r\n  Status?: string;\r\n}\r\n\r\n\r\n\r\n","import { DeleteResult, Repository } from 'typeorm';\r\nimport { BaseInterfaceRepository } from './base-interface-repository.interface';\r\n\r\nexport abstract class BaseAbstractRepository<T>\r\n  implements BaseInterfaceRepository<T> {\r\n  private entity: Repository<T>;\r\n\r\n  protected constructor(entity: Repository<T>) {\r\n    this.entity = entity;\r\n  }\r\n\r\n  public async create(data: T | any): Promise<T> {\r\n    return await this.entity.save(data);\r\n  }\r\n\r\n  public async findOneById(id: number): Promise<T> {\r\n    return await this.entity.findOne(id);\r\n  }\r\n\r\n  public async findByCondition(filterCondition: any): Promise<T> {\r\n    return await this.entity.findOne({ where: filterCondition });\r\n  }\r\n\r\n  public async findWithRelations(relations: any): Promise<T[]> {\r\n    return await this.entity.find(relations);\r\n  }\r\n\r\n  public async findAll(): Promise<T[]> {\r\n    return await this.entity.find();\r\n  }\r\n\r\n  public async remove(id: string): Promise<DeleteResult> {\r\n    return await this.entity.delete(id);\r\n  }\r\n}\r\n","import {\r\n  Body,\r\n  Controller,\r\n  Delete,\r\n  Get,\r\n  Logger,\r\n  Param,\r\n  Post,\r\n} from '@nestjs/common';\r\nimport { Itask } from '../interfaces/tender.interface';\r\nimport { TaskService } from './task.service';\r\n\r\n@Controller('task')\r\nexport class TaskController {\r\n  constructor(private readonly tenderService: TaskService) {}\r\n\r\n  @Get()\r\n  findAll(): Promise<Itask[]> {\r\n    return this.tenderService.find();\r\n  }\r\n\r\n  @Post()\r\n  create(@Body() createTenderDto: any) {\r\n    Logger.log(createTenderDto);\r\n    return this.tenderService.findAll();\r\n  }\r\n\r\n  @Delete(':id')\r\n  delete(@Param('id') id: string) {\r\n    return this.tenderService.findAll();\r\n  }\r\n}\r\n","import { HttpModule, Module } from '@nestjs/common';\r\nimport { TaskService } from './task.service';\r\nimport { TaskController } from './task.controller';\r\n\r\n@Module({\r\n  imports: [HttpModule],\r\n  providers: [TaskService],\r\n  controllers: [TaskController]\r\n})\r\nexport class TaskModule {}\r\n","import { HttpService, Injectable } from '@nestjs/common';\r\nimport { Constants } from '@cudo/ms-core';\r\nimport { Itask } from '../interfaces/tender.interface';\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n  constructor(private httpService: HttpService) { }\r\n  async findAll(): Promise<Itask[]> {\r\n    return new Promise<Itask[]>((resolve) => {\r\n      resolve([\r\n        {\r\n          id: 'dfgdfhfghfg',\r\n          name: 'Task',\r\n          description: 'strighdffjng',\r\n          qty: 567,\r\n        },\r\n      ]);\r\n    });\r\n  }\r\n  async find() {\r\n    const response = await this.httpService\r\n      .get(Constants.MS_TENDER_DAPR_URL)\r\n      .toPromise();\r\n    return response.data;\r\n  }\r\n}\r\n","// import { NODE_ENV, MONGO_URL, MONGO_PORT, MONGO_DB } from '@environments'\r\n\r\nconst orm = {\r\n\tdevelopment: {\r\n\t\ttype: process.env.DATABASE_TYPE,\r\n\t\thost: process.env.DATABASE_HOST,\r\n\t\tport: Number(process.env.DATABASE_PORT),\r\n\t\tusername: process.env.DATABASE_USERNAME,\r\n\t\tpassword: process.env.DATABASE_PASSWORD,\r\n\t\tdatabase: process.env.DATABASE_NAME\r\n\t},\r\n\ttesting: {\r\n\t\turl: process.env.DATABASE_HOST\r\n\t},\r\n\tstaging: {\r\n\t\thost: 'localhost',\r\n\t\tport: process.env.DATABASE_PORT,\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\tdatabase: process.env.DATABASE_NAME\r\n\t},\r\n\tproduction: {\r\n\t\turl: process.env.DATABASE_HOST\r\n\t}\r\n}\r\n\r\nexport default orm[process.env.NODE_ENV]\r\n","import { Injectable, Logger } from '@nestjs/common'\r\nimport { TypeOrmOptionsFactory, TypeOrmModuleOptions } from '@nestjs/typeorm'\r\nimport {\r\n\tgetMetadataArgsStorage,\r\n\tcreateConnection,\r\n\tgetConnection\r\n} from 'typeorm'\r\n\r\nimport config from '../../config.orm'\r\n// import { logger } from '../../common'\r\n\r\n@Injectable()\r\nexport class TypeOrmService implements TypeOrmOptionsFactory {\r\n\tasync createTypeOrmOptions(): Promise<TypeOrmModuleOptions> {\r\n\t\tconst options = {\r\n\t\t\t...config,\r\n\t\t\tentities: getMetadataArgsStorage().tables.map(tbl => tbl.target),\r\n\t\t\t// migrations: ['src/modules/**/migration/*.ts'],\r\n\t\t\t// subscribers: ['src/modules/**/subscriber/*.ts'],\r\n\t\t\t// cli: {\r\n\t\t\t// \tentitiesDir: 'src/app/**/entity',\r\n\t\t\t// \tmigrationsDir: 'src/app/**/migration',\r\n\t\t\t// \tsubscribersDir: 'src/app/**/subscriber'\r\n\t\t\t// },\r\n\t\t\tsynchronize: true,\r\n\t\t\tautoLoadEntities: true,\r\n\t\t\tuseNewUrlParser: true,\r\n\t\t\tuseUnifiedTopology: true,\r\n\t\t\tkeepConnectionAlive: true,\r\n\t\t\tlogging: true\r\n\t\t}\r\n\t\treturn options\r\n\t}\r\n}\r\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport {Constants} from '@cudo/ms-core'\r\n\r\nasync function bootstrap() {\r\n  const app = await NestFactory.create(AppModule);\r\n  const globalPrefix = 'api';\r\n  // app.setGlobalPrefix(globalPrefix);\r\n  const port = process.env.PORT || 3333;\r\n  await app.listen(port, () => {\r\n    Logger.log(Constants.LISTENING_AT + port + '/' + globalPrefix);\r\n  });\r\n}\r\n\r\nbootstrap();\r\n","export * from './lib/ms-core.module';\r\nexport * from './lib/common/constants/constants';\r\nexport * from './services/key-vault/key-vault.service';\r\nexport * from './services/secret/secret.service';","export enum Constants {\r\n    LISTENING_AT = \"Listening at http://localhost:\",\r\n    MS_TENDER_DAPR_URL = \"http://localhost:3500/v1.0/invoke/ms-tender/method/neworder\"\r\n}\r\n","export const configuration = () => ({\r\n    environment: process.env.NODE_ENV,\r\n    port: parseInt(process.env.PORT || \"3000\", 10),\r\n  });","import * as Joi from '@hapi/joi';\r\n\r\nexport const validationSchema = Joi.object({\r\n  NODE_ENV: Joi.string().valid(\"development\", \"production\", \"test\").required(),\r\n  PORT: Joi.number().default(3333),\r\n});","import { Module } from '@nestjs/common';\r\nimport { GraphQLModule } from '@nestjs/graphql';\r\nimport { configuration } from './config/configuration';\r\nimport { validationSchema } from \"./config/validation\";\r\nimport { ConfigModule } from \"@nestjs/config\";\r\nimport { CoreResolver } from './resolvers/core.resolver';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule.forRoot({\r\n      isGlobal: true,\r\n      load: [configuration],\r\n      validationSchema\r\n    }),\r\n    // The ConfigModule lives here\r\n    GraphQLModule.forRoot({\r\n      autoSchemaFile: true,\r\n      playground: true,\r\n    })\r\n  ],\r\n  controllers: [],\r\n  providers: [CoreResolver],\r\n  exports: [],\r\n})\r\nexport class MsCoreModule {}\r\n","import { Float, Query, Resolver } from \"@nestjs/graphql\";\r\n\r\n@Resolver()\r\nexport class CoreResolver {\r\n  @Query(() => Float)\r\n  uptime() {\r\n    return process.uptime();\r\n  }\r\n}","import { Injectable, Type } from '@nestjs/common';\r\nimport { DefaultAzureCredential } from \"@azure/identity\";\r\nimport { KeyClient } from \"@azure/keyvault-keys\";\r\n\r\n/**\r\n * @desc Use this class to get secrets that are configured on cloud by default it uses environment variables i.e SM_REGION, SM_ACCESS_KEY_ID and SM_SECRET_ACCESS_KEY to connect with kms server\r\n * you can also specify your configuration using constructor\r\n */\r\n@Injectable()\r\nexport class KeyVaultService {\r\n    //#region fields\r\n    private secretStore: Map<string, string | Record<string, any>> = new Map<string, string | Record<string, any>>()\r\n    private credential: DefaultAzureCredential;\r\n    private client: KeyClient;\r\n    //#endregion\r\n\r\n    //#region constructors\r\n    public constructor() {\r\n        // this.credential = new DefaultAzureCredential();\r\n        // // Build the URL to reach your key vault\r\n        // const vaultName = process.env.VAULT_NAME;\r\n        // const url = `https://${vaultName}.vault.azure.net`;\r\n        // this.client = new KeyClient(url, this.credential);\r\n    }\r\n    //#endregion\r\n\r\n    //#region private methods\r\n\r\n\r\n    //#endregion\r\n\r\n    public async getSecretValue(secretName: string) {\r\n        const result = await this.client.getKey(secretName);\r\n        console.log(result);\r\n    }\r\n}\r\n","import { DefaultAzureCredential } from '@azure/identity';\r\nimport { Injectable } from '@nestjs/common';\r\nimport { SecretClient } from \"@azure/keyvault-secrets\";\r\n\r\n@Injectable()\r\nexport class SecretService {\r\n    //#region private fields    \r\n    private credential: DefaultAzureCredential;\r\n    client: SecretClient;\r\n    //#endregion\r\n\r\n    //#region constructors\r\n    public constructor() {\r\n        this.credential = new DefaultAzureCredential();\r\n        // Build the URL to reach your key vault\r\n        const vaultName = process.env.VAULT_NAME;\r\n        const url = `https://${vaultName}.vault.azure.net`;\r\n        this.client = new SecretClient(url, this.credential);\r\n    }\r\n    //#endregion\r\n\r\n    //#region private methods\r\n    //#endregion\r\n\r\n    //#region public methods\r\n    public async getSecretValue(secretName: string) {\r\n        const result = await this.client.getSecret(secretName);\r\n        console.log(result);\r\n    }\r\n    //#endregion\r\n}\r\n","module.exports = require(\"@azure/identity\");","module.exports = require(\"@azure/keyvault-secrets\");","module.exports = require(\"@hapi/joi\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"uuid\");"],"sourceRoot":""}