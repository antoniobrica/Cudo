{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/ms-task/src/app/app.module.ts","webpack:///./apps/ms-task/src/app/component/task/dto/create-Task.dto.ts","webpack:///./apps/ms-task/src/app/component/task/entity/task.entity.ts","webpack:///./apps/ms-task/src/app/component/task/model/task.ts","webpack:///./apps/ms-task/src/app/component/task/task.module.ts","webpack:///./apps/ms-task/src/app/component/task/task.resolver.ts","webpack:///./apps/ms-task/src/app/component/task/task.service.ts","webpack:///./apps/ms-task/src/app/repositories/base/base-abstract-repository.ts","webpack:///./apps/ms-task/src/app/repositories/base/task/task-repository.service.ts","webpack:///./apps/ms-task/src/config.orm.ts","webpack:///./apps/ms-task/src/config/typeorm/type-orm.service.ts","webpack:///./apps/ms-task/src/main.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/graphql\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"apollo-server-express\"","webpack:///external \"class-validator\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\"","webpack:///external \"uuid\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TaskModule } from 'apps/ms-task/src/app/component/task/task.module'\n\n// import { AppController } from './app.controller';\n// import { AppService } from './app.service';\nimport {TypeOrmService } from '../config/typeorm/type-orm.service';\n// import { TasksModule } from './task/task.module';\n// import { UserModule } from './components/user/user.module';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      context: ({ req, connection }) => connection ? { req: connection.context } : { req },\n      autoSchemaFile: true,\n    }),\n\n    TaskModule,\n    // TasksModule,\n    TypeOrmModule.forRootAsync({\n      useClass: TypeOrmService,\n    }),\n    // UserModule,\n  ],\n  // controllers: [AppController],\n  // providers: [AppService],\n})\nexport class AppModule {}\n","import { Field, InputType } from '@nestjs/graphql';\r\nimport { IsDate, IsNotEmpty, IsOptional, Length } from 'class-validator';\r\nimport { Column, PrimaryColumn } from 'typeorm';\r\n\r\n@InputType()\r\nexport class CreateTaskDto {\r\n  @Field()\r\n  @Length(1,20)\r\n  @Column({type:\"text\", unique:true})\r\n  @IsNotEmpty()\r\n  @PrimaryColumn()\r\n  taskTitle: string;\r\n\r\n  @Field({nullable:true})\r\n  @Length(0,255)\r\n  @IsNotEmpty()\r\n  description?: string;\r\n\r\n  @Field({nullable:true})\r\n  @Column()\r\n  @IsOptional()\r\n  @IsDate()\r\n  startDate?: Date\r\n\r\n  @Field({nullable:true})\r\n  @Column()\r\n  @IsOptional()\r\n  @IsDate()\r\n  endDate?: Date\r\n\r\n  @Field({nullable:true})\r\n  @Column()\r\n  @IsOptional()\r\n  estimateDays?: number\r\n  \r\n}\r\n\r\n","import { Column, Entity, PrimaryColumn, PrimaryGeneratedColumn } from 'typeorm';\r\nimport { Field, ObjectType } from '@nestjs/graphql';\r\nimport { IsDate, IsNotEmpty, IsOptional, Length } from 'class-validator';\r\n\r\n@ObjectType()\r\n@Entity({ name: 'tasks' })\r\nexport class TaskEntity {\r\n  @Field()\r\n  @Column()\r\n  taskId: string;\r\n\r\n  @Field()\r\n  @Length(1,20)\r\n  @Column({type:\"text\", unique:true})\r\n  @IsNotEmpty()\r\n  @PrimaryColumn()\r\n  taskTitle: string;\r\n\r\n  @Field({nullable:true})\r\n  @Column()\r\n  description?: string;\r\n\r\n  @Field({nullable:true})\r\n  @Column({type:'date'})\r\n  @IsOptional()\r\n  @IsDate()\r\n  startDate?: any\r\n\r\n  @Field({nullable:true})\r\n  @Column({type:'date'})\r\n  @IsOptional()\r\n  @IsDate()\r\n  endDate?: any\r\n\r\n  @Field({nullable:true})\r\n  @Column()\r\n  @IsOptional()\r\n  estimateDays?: number \r\n}\r\n\r\n\r\n\r\n  \r\n  \r\n","import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Task {\n    @Field()\n    taskId: string;\n    \n    @Field()\n    taskTitle: string;\n    \n    @Field({nullable:true})\n    description?: string;\n    \n    @Field({nullable:true})\n    startDate?: any\n    \n    @Field({nullable:true})\n    endDate?: any\n    \n    @Field({nullable:true})\n    estimateDays?: number \n}\n\n","import { Module } from '@nestjs/common';\nimport { TasksResolver } from './task.resolver';\nimport { TasksService } from './task.service';\nimport { TaskRepositoryService } from 'apps/ms-task/src/app/repositories/base/task/task-repository.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TaskEntity } from './entity/task.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TaskEntity]),],// TypeOrmModule.forFeature([userEntity])\n  providers: [TasksResolver, {\n    provide: 'TaskRepositoryInterface',\n    useClass: TaskRepositoryService,\n  },\n  {\n    provide: 'TaskServiceInterface',\n    useClass: TasksService,\n  }],\n})\nexport class TaskModule {}\n","import { Inject } from '@nestjs/common';\nimport { Resolver, Query, Args, Mutation } from '@nestjs/graphql';\nimport { CreateTaskDto } from './dto/create-Task.dto';\nimport { TaskEntity } from './entity/task.entity';\nimport { Task } from './model/task';\nimport { TasksService } from './task.service';\n\n@Resolver(() => Task)\nexport class TasksResolver {\n  constructor(\n    @Inject('TaskServiceInterface')\n    private readonly tasksService: TasksService) {}\n\n\n  @Query(() => [TaskEntity], { nullable: true } )\n   async getTasks(): Promise<TaskEntity[]>  {\n     return await this.tasksService.findAll()\n   }\n\n  \n  @Mutation(() => Task)\n  async createNewTask(\n    @Args('createTaskData') createTaskData: CreateTaskDto\n  ) {\n    return this.tasksService.create(createTaskData);\n  }\n\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { GraphQLError } from 'graphql';\nimport { ApolloError } from \"apollo-server-express\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TaskEntity } from './entity/task.entity';\nimport { TaskRepositoryInterface } from './interface/task.repository.interface';\nimport { TaskServiceInterface } from './interface/task.service.interface';\nimport { CreateTaskDto } from './dto/create-Task.dto';\n\n@Injectable()\nexport class TasksService implements TaskServiceInterface {\n  constructor(\n    @Inject('TaskRepositoryInterface')\n    private readonly taskRepository: TaskRepositoryInterface\n  ) {}\n\n  public async create(createTaskDto: CreateTaskDto): Promise<TaskEntity> {\n\n    try{\n    const taskEntity: TaskEntity={\n        taskId: uuidv4(),\n      ...createTaskDto}\n      return await this.taskRepository.create(taskEntity);\n    } catch (error){formatError: (error: GraphQLError) => {\n      if (error.originalError instanceof ApolloError) {\n        return error;\n      }\n\n      const errId = uuidv4();\n      console.log(\"errId: \", errId);\n      console.log(error);;\n    }}\n}\n\n\n  public  async findAll(): Promise<TaskEntity[]> {\n    try{\n    return await this.taskRepository.findAll();\n    } catch(error){throw error}\n  }\n\n}","import { DeleteResult, Repository } from 'typeorm';\nimport { BaseInterfaceRepository } from './base-interface-repository.interface';\n\nexport abstract class BaseAbstractRepository<T>\n  implements BaseInterfaceRepository<T> {\n  private entity: Repository<T>;\n\n  protected constructor(entity: Repository<T>) {\n    this.entity = entity;\n  }\n\n  public async create(data: T | any): Promise<T> {\n    return await this.entity.save(data);\n  }\n\n  public async findOneById(id: number): Promise<T> {\n    return await this.entity.findOne(id);\n  }\n\n  public async findByCondition(filterCondition: any): Promise<T> {\n    return await this.entity.findOne({ where: filterCondition });\n  }\n\n  public async findWithRelations(relations: any): Promise<T[]> {\n    return await this.entity.find(relations);\n  }\n\n  public async findAll(): Promise<T[]> {\n    return await this.entity.find();\n  }\n\n  public async remove(id: string): Promise<DeleteResult> {\n    return await this.entity.delete(id);\n  }\n}","import { Injectable } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { TaskRepositoryInterface } from 'apps/ms-task/src/app/component/task/interface/task.repository.interface';\r\nimport { BaseAbstractRepository } from '../base-abstract-repository';\r\nimport { TaskEntity } from '../../../component/task/entity/task.entity';\r\n\r\n@Injectable()\r\nexport class TaskRepositoryService\r\n  extends BaseAbstractRepository<TaskEntity>\r\n  implements TaskRepositoryInterface {\r\n  constructor(\r\n    @InjectRepository(TaskEntity)\r\n    private readonly tasksRepository: Repository<TaskEntity>\r\n  ) {\r\n    super(tasksRepository);\r\n  }\r\n}\r\n","// import { NODE_ENV, MONGO_URL, MONGO_PORT, MONGO_DB } from '@environments'\n\nconst orm = {\n\tdevelopment: {\n\t\ttype: process.env.DATABASE_TYPE,\n\t\thost: process.env.DATABASE_HOST,\n\t\tport: process.env.DATABASE_PORT,\n\t\tusername: process.env.DATABASE_USERNAME,\n\t\tpassword: process.env.DATABASE_PASSWORD,\n\t\tdatabase: process.env.DATABASE_NAME\n\t},\n\ttesting: {\n\t\turl: process.env.DATABASE_HOST\n\t},\n\tstaging: {\n\t\thost: 'localhost',\n\t\tport: process.env.DATABASE_PORT,\n\t\tusername: '',\n\t\tpassword: '',\n\t\tdatabase: process.env.DATABASE_NAME\n\t},\n\tproduction: {\n\t\turl: process.env.DATABASE_HOST\n\t}\n}\n\nexport default orm[process.env.NODE_ENV]\n","import { Injectable, Logger } from '@nestjs/common'\nimport { TypeOrmOptionsFactory, TypeOrmModuleOptions } from '@nestjs/typeorm'\nimport {\n\tgetMetadataArgsStorage,\n\tcreateConnection,\n\tgetConnection\n} from 'typeorm'\n\nimport config from '../../config.orm'\n// import { logger } from '../../common'\n\n@Injectable()\nexport class TypeOrmService implements TypeOrmOptionsFactory {\n\tasync createTypeOrmOptions(): Promise<TypeOrmModuleOptions> {\n\t\tconst options = {\n\t\t\t...config,\n\t\t\tentities: getMetadataArgsStorage().tables.map(tbl => tbl.target),\n\t\t\t// migrations: ['src/modules/**/migration/*.ts'],\n\t\t\t// subscribers: ['src/modules/**/subscriber/*.ts'],\n\t\t\t// cli: {\n\t\t\t// \tentitiesDir: 'src/modules/**/entity',\n\t\t\t// \tmigrationsDir: 'src/modules/**/migration',\n\t\t\t// \tsubscribersDir: 'src/modules/**/subscriber'\n\t\t\t// },\n\t\t\tsynchronize: true,\n\t\t\tautoLoadEntities: true,\n\t\t\tuseNewUrlParser: true,\n\t\t\tuseUnifiedTopology: true,\n\t\t\tkeepConnectionAlive: true,\n\t\t\tlogging: true\n\t\t}\n\t\treturn options\n\t}\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n// import {Constants} from '@cudo/ms-core'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n\n\n    // Logger.log(Constants.LISTENING_AT + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"uuid\");"],"sourceRoot":""}