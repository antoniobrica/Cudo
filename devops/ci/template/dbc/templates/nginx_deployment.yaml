apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.env }}-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.env }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Values.env }}-nginx
    spec:
      volumes:
      - name: {{ .Values.env }}-code
        persistentVolumeClaim:
          claimName: {{ .Values.env }}-code
      - name: config
        configMap:
          name: {{ .Values.env }}-nginx-config
          items:
          - key: config
            path: site.conf
      containers:
      - name: {{ .Values.env }}-nginx
        image: nginx:1.7.9
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.service.port }}
        volumeMounts:
        - name: {{ .Values.env }}-code
          mountPath: /code
        - name: config
          mountPath: /etc/nginx/conf.d
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
      initContainers:
      - name: install
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        #image: dbcacrdev1.azurecr.io/dbc-pi-uat:1284
        volumeMounts:
        - name: {{ .Values.env }}-code
          mountPath: /code
        command: ["/bin/sh", "-c", "chown -R 1000:1000 /code ; cp -vr /var/www/. /code ; find /code -type d -print0 | xargs -0 chmod 775 ;  find /code -type f -print0 | xargs -0 chmod 664 ; chown -R 1000:33 /code/storage"]

