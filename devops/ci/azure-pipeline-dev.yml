name: $(Date:yyyyMMdd).$(Rev:r).$(Build.BuildId)

trigger:
  branches:
    include:
      - dev
  paths:
    include:
      - package/*
      - apps/ms-account/*
      - apps/ms-document/*
        #   exclude:
        #- '*'
jobs:
- job: cudogetchp
  pool: cudo-selfhosted-agent
  steps: 
    - checkout: self
      clean: false
      lfs: false
    - powershell: |
            $url="$(System.CollectionUri)/$(System.TeamProject)/_apis/git/repositories/$(Build.Repository.ID)/commits/$(Build.SourceVersion)/changes?api-version=5.1"
            $result = Invoke-RestMethod -Uri $url -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Method GET
                       
            $changesFolder = $result.changes | Where-Object{$_.item.gitObjectType -match "tree"} | Select-Object -Property {$_.item.path}
     
            foreach($path in $changesFolder){
              if($path -match '/package'){
             echo "##vso[task.setvariable variable=packages;isOutput=true]$True"
            break
            }
            }
            foreach($path in $changesFolder){
              if($path -match '/apps/ms-account'){
             echo "##vso[task.setvariable variable=msaccount;isOutput=true]$True"
            break
            }
            }
            foreach($path in $changesFolder){
              if($path -match '/apps/ms-document'){
             echo "##vso[task.setvariable variable=msdocument;isOutput=true]$True"
            break
            }
            }
      name: cudovars

- job: packages
  pool: cudo-selfhosted-agent
  dependsOn: cudogetchp
  condition: eq(dependencies.cudogetchp.outputs['cudovars.packages'], 'true')
  steps:
          - checkout: self
            clean: false
            lfs: false
          - bash : |
                  rm -f package-lock.json
                  rm -f package.json
                  cp package/package.json .
                  npm install

- job: msaccount
  pool: cudo-selfhosted-agent
  dependsOn: cudogetchp
  condition: eq(dependencies.cudogetchp.outputs['cudovars.msaccount'], 'true')
  steps:
          - checkout: self
            clean: false
            lfs: false
          - bash : |
                  npm run nx run-many -- --target=build --projects='ms-account' --with-deps --generatePackageJson=true
                  cp devops/docker/ms-dockerfile dist/apps/ms-account/Dockerfile
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: ms-account-dev
              dockerfile: dist/apps/ms-account/Dockerfile
              containerRegistry: dev-docker-registry
              tags: latest
  
- job: msdocument
  pool: cudo-selfhosted-agent
  dependsOn: cudogetchp
  condition: eq(dependencies.cudogetchp.outputs['cudovars.msdocument'], 'true')
  steps:
          - checkout: self
            clean: false
            lfs: false
          - bash : |
                  npm run nx run-many -- --target=build --projects='ms-document' --with-deps --generatePackageJson=true
                  cp devops/docker/ms-dockerfile dist/apps/ms-document/Dockerfile
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: ms-document-dev
              dockerfile: dist/apps/ms-document/Dockerfile
              containerRegistry: dev-docker-registry
